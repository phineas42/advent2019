#!/bin/bash
. ../stdlib.bash

#REACTION_REGEX="^(.+) => (\d+) (.*)$"
declare -A REACTIONS
while IFS= read RXN; do
#	INPUTS=()
#	if [[ $RXN =~ $REACTION_REGEX ]]; then
#		for TOKEN in ${BASH_REMATCH[1]}; do
#			INPUTS+=("${TOKEN%,}")
#		done
#		OUTPUT=${BASH_REMATCH[2]}
#		REACTIONS[${BASH_REMATCH[3]}]="
#		for TOKEN in ${BASH_REMATCH[2]}; do
#			QUANTITY=
#			CHEMICAL=$2
#			CHEMICAL=${CHEMICAL%,}
#

#	INPUTS=()
#	OUTPUTS=()
#	STATE=INPUT_QUANTITY
#	QUANTITY=
#	CHEMICAL=
#	for TOKEN in $RXN; do
#		case "$STATE" in
#			INPUT_QUANTITY)
#				QUANTITY=$TOKEN
#				STATE=INPUT_CHEMICAL
#				;;
#			INPUT_CHEMICAL)
#				CHEMICAL=$TOKEN
#				if [[ ${CHEMICAL[-1]} == "," ]]; then
#					CHEMICAL=${CHEMICAL%,}
#					STATE=INPUT_PRODUCES
#				else
#					STATE=INPUT_QUANTITY
#				fi
#				INPUTS+=("$QUANTITY $CHEMICAL")
#				;;
#			INPUT_PRODUCES)
#				STATE=OUTPUT_QUANTITY
#				;;
#			OUTPUT_QUANTITY)
#				QUANTITY=$TOKEN
#				STATE=OUTPUT_CHEMICAL
#				;;
#			OUTPUT_CHEMICAL)
#				CHEMICAL=$TOKEN
#				OUTPUTS+=("$QUANTITY $CHEMICAL")
#				;;
#		esac
#	done
#	# ASSERT: Assume last CHEMICAL was the OUTPUT
#	REACTIONS[$CHEMICAL]="$RXN"
	REACTIONS[${RXN##* }]="$RXN"
done

# How many more of each CHEMICAL is required...
# A negative value indicates ON-HAND material.
declare -A REQUIRE=([FUEL]=1)
KEEP_PROCESSING=1
I=0
while [[ $KEEP_PROCESSING -eq 1 ]]; do
	#DEBUG "Iteration $I"
	KEEP_PROCESSING=0
	for REQUIRED_CHEMICAL in ${!REQUIRE[@]}; do
		if [[ $REQUIRED_CHEMICAL == "ORE" ]]; then
			continue
		fi
		REQUIRED_QUANTITY=${REQUIRE[$REQUIRED_CHEMICAL]}
		if [[ $REQUIRED_QUANTITY -lt 1 ]]; then
			continue
		fi
		KEEP_PROCESSING=1
		#DEBUG "Requirement: $REQUIRED_QUANTITY $REQUIRED_CHEMICAL"
		REACTION=${REACTIONS[$REQUIRED_CHEMICAL]}
		#DEBUG "Reaction: $REACTION"
		INPUTS=${REACTION% =>*}
		OUTPUTS=${REACTION#*=> }
		IFS=,
		ALL_INPUTS=($INPUTS)
		unset IFS
		OUTPUT=($OUTPUTS)
		OUTPUT_QUANTITY=${OUTPUT[0]}
		OUTPUT_CHEMICAL=${OUTPUT[1]}
		#__LCM $OUTPUT_QUANTITY $REQUIRED_QUANTITY
		#TIMES_TO_PERFORM_REACTION=$RES
		TIMES_TO_PERFORM_REACTION=$((REQUIRED_QUANTITY/OUTPUT_QUANTITY))
		if [[ $((REQUIRED_QUANTITY%OUTPUT_QUANTITY)) -gt 0 ]]; then
			TIMES_TO_PERFORM_REACTION=$((TIMES_TO_PERFORM_REACTION+1))
		fi
		#DEBUG "${TIMES_TO_PERFORM_REACTION}x  $REACTION"
		for INPUT in "${ALL_INPUTS[@]}"; do
			INPUT=${INPUT%,}
			INPUT_PARTS=($INPUT)
			INPUT_QUANTITY=${INPUT_PARTS[0]}
			INPUT_CHEMICAL=${INPUT_PARTS[1]}
			if [[ ! -v "REQUIRE[$INPUT_CHEMICAL]" ]]; then
				#DEBUG "Didn't find a requirement for REQUIRE[$INPUT_CHEMICAL]"
				REQUIRE[$INPUT_CHEMICAL]=0
			fi
			#DEBUG "Spending input [$INPUT_CHEMICAL]="$((REQUIRE[$INPUT_CHEMICAL]))"+"$((INPUT_QUANTITY))"*"$((TIMES_TO_PERFORM_REACTION))
			REQUIRE[$INPUT_CHEMICAL]=$((REQUIRE[$INPUT_CHEMICAL]+INPUT_QUANTITY*TIMES_TO_PERFORM_REACTION))
		done
		#DEBUG "REQUIRE[$OUTPUT_CHEMICAL]==$((REQUIRE[$OUTPUT_CHEMICAL]))"
		REQUIRE[$OUTPUT_CHEMICAL]=$((REQUIRE[$OUTPUT_CHEMICAL]-OUTPUT_QUANTITY*TIMES_TO_PERFORM_REACTION))
		#declare -p REQUIRE
	done
	I=$((I+1))
done
echo ${REQUIRE[ORE]}
