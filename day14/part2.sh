#!/bin/bash
. ../stdlib.bash

declare -A REACTIONS
while IFS= read RXN; do
	REACTIONS[${RXN##* }]="$RXN"
done

J=0
FUEL=
LAST_FUEL=
MIN_FUEL=0
MAX_FUEL=1000000000000
FUEL=$((MIN_FUEL+(MAX_FUEL-MIN_FUEL)/2))
# BINARY SEARCH FUEL
while [[ $FUEL -ne $LAST_FUEL ]]; do
	unset REQUIRE
	declare -A REQUIRE
	REQUIRE[FUEL]=$FUEL
	KEEP_PROCESSING=1
	I=0
	while [[ $KEEP_PROCESSING -eq 1 ]]; do
		#DEBUG "Iteration $I"
		KEEP_PROCESSING=0
		for REQUIRED_CHEMICAL in ${!REQUIRE[@]}; do
			if [[ $REQUIRED_CHEMICAL == "ORE" ]]; then
				continue
			fi
			REQUIRED_QUANTITY=${REQUIRE[$REQUIRED_CHEMICAL]}
			if [[ $REQUIRED_QUANTITY -lt 1 ]]; then
				continue
			fi
			KEEP_PROCESSING=1
			#DEBUG "Requirement: $REQUIRED_QUANTITY $REQUIRED_CHEMICAL"
			REACTION=${REACTIONS[$REQUIRED_CHEMICAL]}
			#DEBUG "Reaction: $REACTION"
			INPUTS=${REACTION% =>*}
			OUTPUTS=${REACTION#*=> }
			IFS=,
			ALL_INPUTS=($INPUTS)
			unset IFS
			OUTPUT=($OUTPUTS)
			OUTPUT_QUANTITY=${OUTPUT[0]}
			OUTPUT_CHEMICAL=${OUTPUT[1]}
			#__LCM $OUTPUT_QUANTITY $REQUIRED_QUANTITY
			#TIMES_TO_PERFORM_REACTION=$RES
			TIMES_TO_PERFORM_REACTION=$((REQUIRED_QUANTITY/OUTPUT_QUANTITY))
			if [[ $((REQUIRED_QUANTITY%OUTPUT_QUANTITY)) -gt 0 ]]; then
				TIMES_TO_PERFORM_REACTION=$((TIMES_TO_PERFORM_REACTION+1))
			fi
			#DEBUG "${TIMES_TO_PERFORM_REACTION}x  $REACTION"
			for INPUT in "${ALL_INPUTS[@]}"; do
				INPUT=${INPUT%,}
				INPUT_PARTS=($INPUT)
				INPUT_QUANTITY=${INPUT_PARTS[0]}
				INPUT_CHEMICAL=${INPUT_PARTS[1]}
				if [[ ! -v "REQUIRE[$INPUT_CHEMICAL]" ]]; then
					#DEBUG "Didn't find a requirement for REQUIRE[$INPUT_CHEMICAL]"
					REQUIRE[$INPUT_CHEMICAL]=0
				fi
				#DEBUG "Spending input [$INPUT_CHEMICAL]="$((REQUIRE[$INPUT_CHEMICAL]))"+"$((INPUT_QUANTITY))"*"$((TIMES_TO_PERFORM_REACTION))
				REQUIRE[$INPUT_CHEMICAL]=$((REQUIRE[$INPUT_CHEMICAL]+INPUT_QUANTITY*TIMES_TO_PERFORM_REACTION))
			done
			#DEBUG "REQUIRE[$OUTPUT_CHEMICAL]==$((REQUIRE[$OUTPUT_CHEMICAL]))"
			REQUIRE[$OUTPUT_CHEMICAL]=$((REQUIRE[$OUTPUT_CHEMICAL]-OUTPUT_QUANTITY*TIMES_TO_PERFORM_REACTION))
			#declare -p REQUIRE
		done
		I=$((I+1))
	done
	if [[ ${REQUIRE[ORE]} -lt 1000000000000 ]]; then
		MIN_FUEL=$FUEL
	elif [[ ${REQUIRE[ORE]} -gt 1000000000000 ]]; then
		MAX_FUEL=$FUEL
	else
		echo $FUEL
		exit 0
	fi
	LAST_FUEL=$FUEL
	FUEL=$((MIN_FUEL+(MAX_FUEL-MIN_FUEL)/2))
	J=$((J+1))
done
echo $FUEL
